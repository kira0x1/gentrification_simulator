@using System
@inherits Sandbox.UI.Panel

<root class="slot-btn" onclick=@(() => OnClicked())>
    @{
        var btnClass = "inner-btn" + (IsOn ? " on" : " off");

        if (ButtonType == ButtonTypes.Toggle)
        {
            btnClass += " blue";
        }

        if (IsDisabled) btnClass += " disabled";
    }

    <div class=@btnClass>
        @if (KeyLabel != null)
        {
            <div class="key">@KeyLabel</div>
        }

        @if (Icon != null)
        {
            <button>
                <i>@Icon</i>
            </button>
        }
    </div>
</root>

@code
{
    public enum ButtonTypes
    {
        Normal,
        Toggle
    }

    public bool IsOn { get; set; }
    public ButtonTypes ButtonType { get; set; }
    public string KeyLabel { get; set; }
    public string Icon { get; set; }
    public Action OnClickAction { get; set; }
    public bool IsDisabled { get; set; }

    private void OnClicked()
    {
        if (ButtonType == ButtonTypes.Toggle)
        {
            IsOn = !IsOn;
        }

        OnClickAction?.Invoke();
    }

    protected override int BuildHash() => HashCode.Combine(Icon, KeyLabel, IsOn, IsDisabled);
}