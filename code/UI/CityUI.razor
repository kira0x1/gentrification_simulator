@using System
@using Kira
@using Sandbox.UI
@inherits PanelComponent
@namespace Sandbox

<root>
    <div class="stats">
        <StatText Label="Gdp" Value=@($"{City.CityState.CityIncome}")/>
        <StatText Label="Population" Value=@($"{City.Population}")/>
        <StatText Label="Homeless" Value=@($"{City.Homelessness}")/>
    </div>
    <div class="action-menu">
        <div class="container grid">
            <SlotBtn Icon="group_add" KeyLabel="1" OnClickAction=@(() => CityManager.SpawnCitizen())/>
            <SlotBtn Icon="science" KeyLabel="2"/>
            <SlotBtn keyLabel="8"/>
            <SlotBtn/>
            <SlotBtn/>
            <SlotBtn/>
            <SlotBtn/>
            <SlotBtn/>
            <SlotBtn/>
        </div>
    </div>
    <navbar>
        <SlotBtn Icon="group_add" KeyLabel="1" OnClickAction=@(() => CityManager.SpawnCitizen())/>
        <SlotBtn/>
        <SlotBtn/>
        <SlotBtn/>
    </navbar>
    <div class="sidebar"></div>
</root>

@code
{
    private Player Player { get; set; }
    private City City { get; set; }
    private CityManager CityManager { get; set; }
    public readonly CityAction[] cityActions = new CityAction[1];

    protected override void OnAwake()
    {
        base.OnAwake();

        CityManager = Scene.GetAllComponents<CityManager>().FirstOrDefault();
        if (!CityManager.IsValid()) return;
        City = CityManager.City;
        cityActions[0] = new CityAction(() => CityManager.SpawnCitizen(), 0.5f);
    }

    protected override void OnStart()
    {
        CityActions.Init();
    }

    protected override void OnUpdate()
    {
        if (Input.Down("Slot1"))
        {
            cityActions[0].Use();
        }
    }

    /// <summary>
    /// the hash determines if the system should be rebuilt. If it changes, it will be rebuilt
    /// </summary>
    protected override int BuildHash() => HashCode.Combine(City.Population);
}